/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package overlapviewer;

import java.awt.Graphics;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;


/**
 * GUI: hier wordt de GUI gemaakt, en de verschillende methoden aangeroepen
 * @author Tim
 */
public class OverlapInterface extends javax.swing.JFrame {
    //variabelen voor het bepalen van de overlap, verschillende lists voor het gebruik in methoden
static String filepath;
static ArrayList<String> content = new ArrayList<>();
private ArrayList<Gene> geneList = new ArrayList<>();
private ArrayList<Gene> exportList = new ArrayList<>();
//instantie van het object overlapmaker voor gebruik in een actionlistener
overlapMaker om = new overlapMaker();
//instantiÃ«ring en declaratie van de string header voor later gebruik in een methode.
public String header = "";





    /**
     * Creates new form OverlapInterface
     */
    public OverlapInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPath = new javax.swing.JLabel();
        txtPath = new javax.swing.JTextField();
        btnBrowse = new javax.swing.JButton();
        btnOpen = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtStatistics = new javax.swing.JTextArea();
        cmbLap1 = new javax.swing.JComboBox<>();
        cmbLap2 = new javax.swing.JComboBox<>();
        lblLap1 = new javax.swing.JLabel();
        lblLap2 = new javax.swing.JLabel();
        pnlVenn = new javax.swing.JPanel();
        lblUniqueLeft = new javax.swing.JLabel();
        lblOverlaptotal = new javax.swing.JLabel();
        lblUniqueRight = new javax.swing.JLabel();
        lblView1 = new javax.swing.JLabel();
        lblView2 = new javax.swing.JLabel();
        btnExportMed = new javax.swing.JButton();
        btnExportGenes = new javax.swing.JButton();
        btnVisualize = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblPath.setText("filepath");

        btnBrowse.setText("Browse");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        btnOpen.setText("Open");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        txtStatistics.setColumns(20);
        txtStatistics.setRows(5);
        jScrollPane1.setViewportView(txtStatistics);

        lblLap1.setText("select overlap 1");

        lblLap2.setText("select overlap 2");

        pnlVenn.setBackground(new java.awt.Color(255, 255, 255));
        pnlVenn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        pnlVenn.setForeground(new java.awt.Color(153, 153, 153));

        lblView1.setText(" ");

        lblView2.setText(" ");

        javax.swing.GroupLayout pnlVennLayout = new javax.swing.GroupLayout(pnlVenn);
        pnlVenn.setLayout(pnlVennLayout);
        pnlVennLayout.setHorizontalGroup(
            pnlVennLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVennLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(lblUniqueLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(lblOverlaptotal, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(lblUniqueRight, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
            .addGroup(pnlVennLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblView1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblView2)
                .addContainerGap())
        );
        pnlVennLayout.setVerticalGroup(
            pnlVennLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVennLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlVennLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblView1)
                    .addComponent(lblView2))
                .addGap(50, 50, 50)
                .addGroup(pnlVennLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUniqueLeft)
                    .addComponent(lblOverlaptotal)
                    .addComponent(lblUniqueRight))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        btnExportMed.setText("Export PubMed");
        btnExportMed.setEnabled(false);
        btnExportMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportMedActionPerformed(evt);
            }
        });

        btnExportGenes.setText("Export Genes");
        btnExportGenes.setEnabled(false);
        btnExportGenes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportGenesActionPerformed(evt);
            }
        });

        btnVisualize.setText("visualize overlap");
        btnVisualize.setEnabled(false);
        btnVisualize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblPath)
                        .addGap(18, 18, 18)
                        .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBrowse)
                        .addGap(18, 18, 18)
                        .addComponent(btnOpen))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbLap1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLap1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLap2)
                            .addComponent(cmbLap2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlVenn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnExportMed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnExportGenes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnVisualize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPath)
                    .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowse)
                    .addComponent(btnOpen))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLap1)
                    .addComponent(lblLap2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbLap1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbLap2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pnlVenn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVisualize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExportGenes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExportMed)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        // TODO add your handling code here:
        //aanmaken van een instantie van kiesbestand, en het toevoegen van het pad aan een variabele
        //voor generiekheid, en het pad invoegen in de textbox in de gui.
        kiesBestand k = new kiesBestand();
        filepath = k.getPath();
        txtPath.setText(filepath);
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        // TODO add your handling code here:
        //code om een bestand te openen met het filepath in de textbox in de gui.
        //stapsgewijze enabling van de buttons om errors/verkeerd gebruik te voorkomen.
        btnVisualize.setEnabled(true);
        //geneList leegmaken voor resetten
        geneList.clear();
        //object aanmaken om bestand in te lezen
        leesBestand l = new leesBestand();
        //header opslaan voor publieke toegang
        
        //inhoud schrijven naar een static arraylist
        content = l.read(txtPath.getText());
        //ophalen van de header uit de file
        header = l.getTitle();
        //door de arraylist heenlopen en voor elk item een nieuw gene object maken
        //aanmaken van alle variabelen voor overzichtelijkheid
        for(String str : content){
            String[] splitted;
            splitted = str.split("\t");
            int TaxID1 = Integer.parseInt(splitted[0]);
            int TaxID2 = Integer.parseInt(splitted[5]);
            int GeneID1 = Integer.parseInt(splitted[1]);
            int GeneID2 = Integer.parseInt(splitted[6]);
            String accession1 = splitted[2];
            String accession2 = splitted[7];
            String productName1 = splitted[3];
            String productName2 = splitted[8];
            String interaction = splitted[4];
            String PMID = splitted[9];
            String timestamp = splitted[10];
            String GeneRif = splitted[11];
            
            geneList.add(new Gene(TaxID1, TaxID2, GeneID1, GeneID2, accession1, accession2, productName1, productName2, interaction, PMID, timestamp, GeneRif));
        }
        //genelist in de overlapfunctie instellen voor selectie van data. 
        om.setGeneList(geneList);
        //statistieken
        //instantie van object statistieken aanmaken en de genelist hieraan meegeven.
        Statistics s = new Statistics(geneList);
        //van verschillende berekeningen de uitkomsten in het textfield toevoegen
        txtStatistics.setText("gene 1 IDs: "+"\t\t\t\t\t"+Integer.toString(s.tax1Length())+"\n"
                             +"gene 2 IDs: "+"\t\t\t\t\t"+Integer.toString(s.tax2Length())+"\n"
                             +"Interactions: "+"\t\t\t\t\t"+Integer.toString(s.geneSize())+"\n"
                             +"Types of interactions: "+"\t\t\t\t"+Integer.toString(s.countInteractions())+"\n");
        
        //de in de comboboxen te weergeven items ophalen d.m.v. een hashset.
        for(String str : s.getInteraction()){
            cmbLap1.addItem(str);
            cmbLap2.addItem(str);
        }
    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnVisualizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizeActionPerformed
        // TODO add your handling code here:
        //Initialisatie van een graphics object zodat het venndiagram
        Graphics g = pnlVenn.getGraphics();
        //stapsgewijze enabling van de buttons om errors/verkeerd gebruik te voorkomen.
        btnExportGenes.setEnabled(true);
        btnExportMed.setEnabled(true);
        //aanmaken van een hashmap voor later gebruik
        Map<Integer, Integer> genemap = new HashMap<>();
        //genemap leegmaken zodat het programma blijft werken
        genemap.clear();
        //exportlist leegmaken zodat het programma blijft werken.
        exportList.clear();
           try{
       
        //overlap berekenen van de 2 geselecteerde items in de comboboxen.
        genemap = om.calculateoverlap(cmbLap1.getSelectedItem().toString(), cmbLap2.getSelectedItem().toString());
        //opslaan van de totale grootte van de overlap.
        int overlapnum = om.calculateoverlap(cmbLap1.getSelectedItem().toString(), cmbLap2.getSelectedItem().toString()).size();
        //grootte van de overlap in een String
        String overlaplength = Integer.toString(om.calculateoverlap(cmbLap1.getSelectedItem().toString(), cmbLap2.getSelectedItem().toString()).size());
        //geselecteerde items in de combobox in de labels op de GUI zetten
        lblView1.setText(cmbLap1.getSelectedItem().toString());
        lblView2.setText(cmbLap2.getSelectedItem().toString());
        //grootte van de overlap in het midden van het vennDiagram
        lblOverlaptotal.setText(overlaplength);
                

        
        //het berekenen van de overlap, deze converteren naar een string en links en rechts in het venn-diagram tekenen.
        lblUniqueLeft.setText(Integer.toString((om.getCounteroverlap1())- (overlapnum)));
        lblUniqueRight.setText(Integer.toString((om.getCounteroverlap2())- (overlapnum)));
        
       
        
        } catch(Exception e){
            //enige mogelijke fout afvangen
            JOptionPane.showMessageDialog(null, "er is een probleem met het berekenen van de overlap!", "Error",
                                    JOptionPane.ERROR_MESSAGE);
           
        }
           //voor elk gen in de overlap het gen object toevoegen aan de list die wordt gebruikt om deze te exporteren naar een txt bestand
        for(int key : genemap.keySet()){
            exportList.add(geneList.get(key));
        }
        //tekenen van het venndiagram
        g.drawOval(45, 55, 110, 50);
        g.drawOval(120, 55, 120, 50);
        
    }//GEN-LAST:event_btnVisualizeActionPerformed

    private void btnExportGenesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportGenesActionPerformed
        // TODO add your handling code here:
        //de exportAll functie uitvoeren.
        exportFile F = new exportFile(exportList, header);
        F.exportAll();
    }//GEN-LAST:event_btnExportGenesActionPerformed

    private void btnExportMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportMedActionPerformed
        // TODO add your handling code here:
        //alleen genen exporteren die minstens een pubmedID hebben. 
        exportFile F = new exportFile(exportList, header);
        F.exportPub();
    }//GEN-LAST:event_btnExportMedActionPerformed

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnExportGenes;
    private javax.swing.JButton btnExportMed;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnVisualize;
    private javax.swing.JComboBox<String> cmbLap1;
    private javax.swing.JComboBox<String> cmbLap2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblLap1;
    private javax.swing.JLabel lblLap2;
    private javax.swing.JLabel lblOverlaptotal;
    private javax.swing.JLabel lblPath;
    private javax.swing.JLabel lblUniqueLeft;
    private javax.swing.JLabel lblUniqueRight;
    private javax.swing.JLabel lblView1;
    private javax.swing.JLabel lblView2;
    private javax.swing.JPanel pnlVenn;
    private javax.swing.JTextField txtPath;
    private javax.swing.JTextArea txtStatistics;
    // End of variables declaration//GEN-END:variables

}
